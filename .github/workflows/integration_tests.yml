name: integration tests

on:
  push:
    branches:
      - main
    paths:
      - .pre-commit-config.yaml
      - .github/workflows/code_checks.yml
      - .github/workflows/docs_build.yml
      - .github/workflows/docs_deploy.yml
      - .github/workflows/integration_tests.yml
      - '**.py'
      - '**.ipynb'
      - poetry.lock
      - pyproject.toml
      - '**.rst'
      - '**.md'
  pull_request:
    branches:
      - main
    paths:
      - .pre-commit-config.yaml
      - .github/workflows/code_checks.yml
      - .github/workflows/docs_build.yml
      - .github/workflows/docs_deploy.yml
      - .github/workflows/integration_tests.yml
      - '**.py'
      - '**.ipynb'
      - poetry.lock
      - pyproject.toml
      - '**.rst'
      - '**.md'

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.10'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install dependencies and run tests
        run: |
          poetry env use '3.10'
          source $(poetry env info --path)/bin/activate
          poetry install --with test
          coverage run -m pytest -m "not integration_test"
          coverage xml
          coverage report -m || true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: codecov-umbrella
          fail_ci_if_error: false
        continue-on-error: true
